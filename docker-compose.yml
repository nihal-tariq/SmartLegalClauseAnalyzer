version: '3.8'

services:
  fastapi:
    build: .
    container_name: fastapi_app
    ports:
      - "8001:8001"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - ./app/document_embedding/legal_chroma_db:/app/app/document_embedding/legal_chroma_db
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8001
    dns:
      - 8.8.8.8
      - 1.1.1.1

  celery_worker:
    build: .
    container_name: celery_worker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - .:/app
      - ./app/document_embedding/legal_chroma_db:/app/app/document_embedding/legal_chroma_db
    command: celery -A app.celery.worker worker --loglevel=info --pool=solo
    dns:
      - 8.8.8.8
      - 1.1.1.1

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234

    env_file:
      - .env
    ports:
      - "1234:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  postgres_data: